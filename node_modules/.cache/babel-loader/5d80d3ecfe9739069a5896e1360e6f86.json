{"ast":null,"code":"var _jsxFileName = \"/Users/stephanycisneros/Desktop/Thinkful/pomodoro_project/Pomodoro/src/pomodoro/Session.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default Session;\n\nfunction Session({\n  session,\n  sessionDuration\n}) {\n  if (!session) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", minutesToDuration(sessionDuration), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": 100 - 100 * (session === null || session === void 0 ? void 0 : session.timeRemaining) / (sessionDuration * 60) // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${100 - 100 * (session === null || session === void 0 ? void 0 : session.timeRemaining) / (sessionDuration * 60)}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/stephanycisneros/Desktop/Thinkful/pomodoro_project/Pomodoro/src/pomodoro/Session.js"],"names":["React","minutesToDuration","secondsToDuration","Session","session","sessionDuration","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AACA,eAAeC,OAAf;;AAEA,SAASA,OAAT,CAAiB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAjB,EAA+C;AAC7C,MAAI,CAACD,OAAL,EAAc,OAAO,IAAP;AAEd,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGA,OAFH,aAEGA,OAFH,uBAEGA,OAAO,CAAEE,KAFZ,WAEwBL,iBAAiB,CAACI,eAAD,CAFzC,aAFF,eAOE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEG,aAAV,CADpB,eAPF,CADF,CAFF,eAeE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBACE,MAAO,OAAMJ,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAEG,aAAf,CAAD,IAAkCF,eAAe,GAAG,EAApD,CANV,CAOI;AAPJ;AAQE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAG,GACN,MAAO,OAAML,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAEG,aAAf,CAAD,IAAkCF,eAAe,GAAG,EAApD,CACP;AAHI,KART,CAYK;AAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAfF,CADF;AAsCD","sourcesContent":["import React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default Session;\n\nfunction Session({ session, sessionDuration }) {\n  if (!session) return null;\n\n  return (\n    <div>\n      {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n          <h2 data-testid=\"session-title\">\n            {/* if session is null do nothing, else access label property*/}\n            {session?.label} for {minutesToDuration(sessionDuration)} minutes\n          </h2>\n          {/* TODO: Update message below correctly format the time remaining in the current session */}\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration(session?.timeRemaining)} remaining\n          </p>\n        </div>\n      </div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={\n                100 - (100 * session?.timeRemaining) / (sessionDuration * 60)\n              } // TODO: Increase aria-valuenow as elapsed time increases\n              style={{\n                width: `${\n                  100 - (100 * session?.timeRemaining) / (sessionDuration * 60)\n                }%`,\n              }} // TODO: Increase width % as elapsed time increases\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}